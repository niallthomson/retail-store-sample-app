on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  id-token: write

name: Release

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release

      - name: Get AWS credentials
        if: ${{ steps.release.outputs.release_created }}
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: us-east-1
          role-session-name: GithubActionsSession

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        if: ${{ steps.release.outputs.release_created }}
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public

      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}

      - name: "Setup Env"
        if: ${{ steps.release.outputs.release_created }}
        uses: ./.github/actions/setup-env

      - name: Upload Release Artifact
        if: ${{ steps.release.outputs.release_created }}
        shell: devenv shell bash -- -e {0}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          IMAGE_TAG: ${{ steps.release.outputs.tag_name }}
          AWS_ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPOSITORY }}
        run: |
          yarn nx run-many -t build --projects=tag:service --parallel=1

          yarn nx run-many -t container --projects=tag:service --tags ${AWS_ECR_REPOSITORY}/retail-store-sample-{projectName}:${IMAGE_TAG} --push true

          yarn nx run-many -t helm --projects=tag:service --remote oci://${AWS_ECR_REPOSITORY} --push

          bash scripts/compose-dist.sh

          gh release upload ${{ steps.release.outputs.tag_name }} ./dist/docker-compose/docker-compose.yaml

          bash scripts/kubernetes-dist.sh

          gh release upload ${{ steps.release.outputs.tag_name }} ./dist/kubernetes/kubernetes.yaml
